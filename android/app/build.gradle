apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services" // Google services plugin

react {
    // Default config is usually fine, uncomment if needed.
    // root = file("../")
    // reactNativeDir = file("../node_modules/react-native")
    // codegenDir = file("../node_modules/@react-native/codegen")
    // cliFile = file("../node_modules/react-native/cli.js")

    // debuggableVariants = ["liteDebug", "prodDebug"]
    // nodeExecutableAndArgs = ["node"]
    // bundleCommand = "ram-bundle"
    // bundleConfig = file(../rn-cli.config.js)
    // bundleAssetName = "MyApplication.android.bundle"
    // entryFile = file("../js/MyApplication.android.js")
    // extraPackagerArgs = []
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    // hermesFlags = ["-O", "-output-source-map"]
}

// ✅ ProGuard for release
def enableProguardInReleaseBuilds = true

// ✅ JSC flavor fallback (if Hermes disabled)
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    namespace "com.myapp"
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.myapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        // ✅ Reduce APK size by excluding unneeded ABIs
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }

    // ✅ Align Java and Kotlin JVM targets
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug // ⚠️ Replace with your own release keystore before publishing!
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    // ✅ Handle duplicate .so files gracefully
    packagingOptions {
        pickFirst "**/*.so"
    }
}

dependencies {
    // ✅ React Native core
    implementation("com.facebook.react:react-android")

    // ✅ Hermes or JSC
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    // ✅ Firebase BoM (ensures compatible versions)
    implementation platform("com.google.firebase:firebase-bom:32.7.4")

    // ✅ Firebase products (versions picked from BoM automatically)
    implementation "com.google.firebase:firebase-analytics"
    implementation "com.google.firebase:firebase-firestore"
    // Add more as needed:
    // implementation "com.google.firebase:firebase-auth"
    // implementation "com.google.firebase:firebase-messaging"
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); 
applyNativeModulesAppBuildGradle(project)
